Release 14.7 - xst P.20131013 (nt64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.11 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.11 secs
 
--> Reading design: rc5dup.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "rc5dup.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "rc5dup"
Output Format                      : NGC
Target Device                      : xc7a100t-3-csg324

---- Source Options
Top Module Name                    : rc5dup
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 32
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Parsing VHDL file "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\srom.vhd" into library work
Parsing package <srom>.
Parsing package body <srom>.
Parsing VHDL file "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\roundkey.vhd" into library work
Parsing entity <roundkey>.
Parsing architecture <Behavioral> of entity <roundkey>.
Parsing VHDL file "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\Hex2SevenSegConverter.vhd" into library work
Parsing entity <Hex2LED>.
Parsing architecture <Behavioral> of entity <hex2led>.
Parsing VHDL file "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" into library work
Parsing entity <encrypt>.
Parsing architecture <Behavioral> of entity <encrypt>.
Parsing VHDL file "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" into library work
Parsing entity <decrypt>.
Parsing architecture <Behavioral> of entity <decrypt>.
Parsing VHDL file "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\rc5dup.vhd" into library work
Parsing entity <rc5dup>.
Parsing architecture <Behavioral> of entity <rc5dup>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating entity <rc5dup> (architecture <Behavioral>) from library <work>.

Elaborating entity <roundkey> (architecture <Behavioral>) from library <work>.

Elaborating entity <encrypt> (architecture <Behavioral>) from library <work>.
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 141: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 142: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 146: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 147: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 151: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 152: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 156: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 157: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 161: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 162: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 166: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 167: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 171: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 172: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 176: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 177: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 181: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 182: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 186: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 187: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 191: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 192: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 196: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 197: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 201: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 202: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:1127 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 347: Assignment to tr ignored, since the identifier is never used
WARNING:HDLCompiler:634 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd" Line 52: Net <count[2]> does not have a driver.

Elaborating entity <decrypt> (architecture <Behavioral>) from library <work>.
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 140: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 141: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 145: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 146: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 150: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 151: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 155: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 156: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 160: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 161: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 165: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 166: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 170: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 171: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 175: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 176: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 180: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 181: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 185: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 186: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 190: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 191: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 195: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 196: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 200: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd" Line 201: rom should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\rc5dup.vhd" Line 165: inpbl should be on the sensitivity list of the process
WARNING:HDLCompiler:92 - "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\rc5dup.vhd" Line 179: inpbl should be on the sensitivity list of the process

Elaborating entity <Hex2LED> (architecture <Behavioral>) from library <work>.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <rc5dup>.
    Related source file is "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\rc5dup.vhd".
    Found 3-bit register for signal <pr_st>.
    Found 1-bit register for signal <din<63>>.
    Found 1-bit register for signal <din<62>>.
    Found 1-bit register for signal <din<61>>.
    Found 1-bit register for signal <din<60>>.
    Found 1-bit register for signal <din<59>>.
    Found 1-bit register for signal <din<58>>.
    Found 1-bit register for signal <din<57>>.
    Found 1-bit register for signal <din<56>>.
    Found 1-bit register for signal <din<55>>.
    Found 1-bit register for signal <din<54>>.
    Found 1-bit register for signal <din<53>>.
    Found 1-bit register for signal <din<52>>.
    Found 1-bit register for signal <din<51>>.
    Found 1-bit register for signal <din<50>>.
    Found 1-bit register for signal <din<49>>.
    Found 1-bit register for signal <din<48>>.
    Found 1-bit register for signal <din<47>>.
    Found 1-bit register for signal <din<46>>.
    Found 1-bit register for signal <din<45>>.
    Found 1-bit register for signal <din<44>>.
    Found 1-bit register for signal <din<43>>.
    Found 1-bit register for signal <din<42>>.
    Found 1-bit register for signal <din<41>>.
    Found 1-bit register for signal <din<40>>.
    Found 1-bit register for signal <din<39>>.
    Found 1-bit register for signal <din<38>>.
    Found 1-bit register for signal <din<37>>.
    Found 1-bit register for signal <din<36>>.
    Found 1-bit register for signal <din<35>>.
    Found 1-bit register for signal <din<34>>.
    Found 1-bit register for signal <din<33>>.
    Found 1-bit register for signal <din<32>>.
    Found 1-bit register for signal <din<31>>.
    Found 1-bit register for signal <din<30>>.
    Found 1-bit register for signal <din<29>>.
    Found 1-bit register for signal <din<28>>.
    Found 1-bit register for signal <din<27>>.
    Found 1-bit register for signal <din<26>>.
    Found 1-bit register for signal <din<25>>.
    Found 1-bit register for signal <din<24>>.
    Found 1-bit register for signal <din<23>>.
    Found 1-bit register for signal <din<22>>.
    Found 1-bit register for signal <din<21>>.
    Found 1-bit register for signal <din<20>>.
    Found 1-bit register for signal <din<19>>.
    Found 1-bit register for signal <din<18>>.
    Found 1-bit register for signal <din<17>>.
    Found 1-bit register for signal <din<16>>.
    Found 1-bit register for signal <din<15>>.
    Found 1-bit register for signal <din<14>>.
    Found 1-bit register for signal <din<13>>.
    Found 1-bit register for signal <din<12>>.
    Found 1-bit register for signal <din<11>>.
    Found 1-bit register for signal <din<10>>.
    Found 1-bit register for signal <din<9>>.
    Found 1-bit register for signal <din<8>>.
    Found 1-bit register for signal <din<7>>.
    Found 1-bit register for signal <din<6>>.
    Found 1-bit register for signal <din<5>>.
    Found 1-bit register for signal <din<4>>.
    Found 1-bit register for signal <din<3>>.
    Found 1-bit register for signal <din<2>>.
    Found 1-bit register for signal <din<1>>.
    Found 1-bit register for signal <din<0>>.
    Found 27-bit register for signal <Cntr>.
    Found 4-bit register for signal <Valb>.
    Found finite state machine <FSM_0> for signal <pr_st>.
    -----------------------------------------------------------------------
    | States             | 8                                              |
    | Transitions        | 16                                             |
    | Inputs             | 7                                              |
    | Outputs            | 8                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | reset (negative)                               |
    | Reset type         | asynchronous                                   |
    | Reset State        | start                                          |
    | Power Up State     | start                                          |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 27-bit adder for signal <Cntr[26]_GND_6_o_add_32_OUT> created at line 253.
    Found 4-bit adder for signal <Valb[3]_GND_6_o_add_37_OUT> created at line 272.
    Found 16x8-bit Read Only RAM for signal <SSEG_AN>
WARNING:Xst:737 - Found 1-bit latch for signal <dout<63>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<62>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<61>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<60>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<59>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<58>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<57>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<56>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<55>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<54>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<53>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<52>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<51>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<50>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<49>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<48>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<47>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<46>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<45>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<44>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<43>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<42>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<41>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<40>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<39>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<38>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<37>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<36>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<35>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<34>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<33>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<32>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <dout<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred   1 RAM(s).
	inferred   2 Adder/Subtractor(s).
	inferred  95 D-type flip-flop(s).
	inferred  64 Latch(s).
	inferred  75 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <rc5dup> synthesized.

Synthesizing Unit <roundkey>.
    Related source file is "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\roundkey.vhd".
    Found 2-bit register for signal <iCnt>.
    Found 5-bit register for signal <jCnt>.
    Found 2-bit register for signal <kCnt>.
    Found 32-bit register for signal <sReg>.
    Found 32-bit register for signal <lArr<0>>.
    Found 32-bit register for signal <lArr<1>>.
    Found 32-bit register for signal <lArr<2>>.
    Found 32-bit register for signal <lArr<3>>.
    Found 32-bit register for signal <a>.
    Found 32-bit register for signal <b>.
    Found 32-bit register for signal <sArr<0>>.
    Found 32-bit register for signal <sArr<1>>.
    Found 32-bit register for signal <sArr<2>>.
    Found 32-bit register for signal <sArr<3>>.
    Found 32-bit register for signal <sArr<4>>.
    Found 32-bit register for signal <sArr<5>>.
    Found 32-bit register for signal <sArr<6>>.
    Found 32-bit register for signal <sArr<7>>.
    Found 32-bit register for signal <sArr<8>>.
    Found 32-bit register for signal <sArr<9>>.
    Found 32-bit register for signal <sArr<10>>.
    Found 32-bit register for signal <sArr<11>>.
    Found 32-bit register for signal <sArr<12>>.
    Found 32-bit register for signal <sArr<13>>.
    Found 32-bit register for signal <sArr<14>>.
    Found 32-bit register for signal <sArr<15>>.
    Found 32-bit register for signal <sArr<16>>.
    Found 32-bit register for signal <sArr<17>>.
    Found 32-bit register for signal <sArr<18>>.
    Found 32-bit register for signal <sArr<19>>.
    Found 32-bit register for signal <sArr<20>>.
    Found 32-bit register for signal <sArr<21>>.
    Found 32-bit register for signal <sArr<22>>.
    Found 32-bit register for signal <sArr<23>>.
    Found 32-bit register for signal <sArr<24>>.
    Found 32-bit register for signal <sArr<25>>.
    Found 4-bit register for signal <prSt>.
    Found finite state machine <FSM_1> for signal <prSt>.
    -----------------------------------------------------------------------
    | States             | 9                                              |
    | Transitions        | 18                                             |
    | Inputs             | 5                                              |
    | Outputs            | 9                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | clr (positive)                                 |
    | Reset type         | synchronous                                    |
    | Reset State        | strt                                           |
    | Power Up State     | strt                                           |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 2-bit adder for signal <iCnt[1]_GND_7_o_add_13_OUT> created at line 141.
    Found 5-bit adder for signal <jCnt[4]_GND_7_o_add_20_OUT> created at line 154.
    Found 2-bit adder for signal <kCnt[1]_GND_7_o_add_29_OUT> created at line 169.
    Found 32-bit adder for signal <sReg[31]_PWR_7_o_add_36_OUT> created at line 193.
    Found 32-bit adder for signal <abAdd> created at line 261.
    Found 32-bit adder for signal <sAdd> created at line 262.
    Found 32-bit adder for signal <bAShAdd> created at line 264.
    Found 32-bit adder for signal <lAdd> created at line 265.
INFO:Xst:3019 - HDL ADVISOR - 1024 flip-flops were inferred for signal <sArr>. You may be trying to describe a RAM in a way that is incompatible with block and distributed RAM resources available on Xilinx devices, or with a specific template that is not supported. Please review the Xilinx resources documentation and the XST user manual for coding guidelines. Taking advantage of RAM resources will lead to improved device usage and reduced synthesis time.
    Found 32-bit 26-to-1 multiplexer for signal <n0608> created at line 262.
    Found 32-bit 4-to-1 multiplexer for signal <n0614> created at line 265.
    Found 32-bit 32-to-1 multiplexer for signal <lShf> created at line 267.
    Summary:
	inferred   8 Adder/Subtractor(s).
	inferred 1065 D-type flip-flop(s).
	inferred 162 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <roundkey> synthesized.

Synthesizing Unit <encrypt>.
    Related source file is "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\encryptfsm.vhd".
    Set property "LOC = SLICE_X10Y83" for instance <Dev_aStp30>.
    Set property "S = TRUE" for signal <aStp_new>.
    Set property "syn_keep = true" for signal <aStp_new>.
    Set property "KEEP = TRUE" for signal <aStp_new>.
WARNING:Xst:653 - Signal <count<2:1>> is used but never assigned. This sourceless signal will be automatically connected to value GND.
    Found 4-bit register for signal <pr_st>.
    Found 32-bit register for signal <aSig>.
    Found 32-bit register for signal <bSig>.
    Found 64-bit register for signal <dout>.
    Found finite state machine <FSM_2> for signal <pr_st>.
    -----------------------------------------------------------------------
    | States             | 16                                             |
    | Transitions        | 16                                             |
    | Inputs             | 0                                              |
    | Outputs            | 7                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | reset (negative)                               |
    | Reset type         | asynchronous                                   |
    | Reset State        | wt                                             |
    | Power Up State     | wt                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 32-bit adder for signal <aAdd> created at line 316.
    Found 32-bit adder for signal <bAdd> created at line 317.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[31]_Mux_134_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[30]_Mux_136_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[29]_Mux_138_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[28]_Mux_140_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[27]_Mux_142_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[26]_Mux_144_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[25]_Mux_146_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[24]_Mux_148_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[23]_Mux_150_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[22]_Mux_152_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[21]_Mux_154_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[20]_Mux_156_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[19]_Mux_158_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[18]_Mux_160_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[17]_Mux_162_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[16]_Mux_164_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[15]_Mux_166_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[14]_Mux_168_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[13]_Mux_170_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[12]_Mux_172_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[11]_Mux_174_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[10]_Mux_176_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[9]_Mux_178_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[8]_Mux_180_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[7]_Mux_182_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[6]_Mux_184_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[5]_Mux_186_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[4]_Mux_188_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[3]_Mux_190_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[2]_Mux_192_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[1]_Mux_194_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[0]_Mux_196_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[31]_Mux_198_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[30]_Mux_200_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[29]_Mux_202_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[28]_Mux_204_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[27]_Mux_206_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[26]_Mux_208_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[25]_Mux_210_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[24]_Mux_212_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[23]_Mux_214_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[22]_Mux_216_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[21]_Mux_218_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[20]_Mux_220_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[19]_Mux_222_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[18]_Mux_224_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[17]_Mux_226_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[16]_Mux_228_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[15]_Mux_230_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[14]_Mux_232_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[13]_Mux_234_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[12]_Mux_236_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[11]_Mux_238_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[10]_Mux_240_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[9]_Mux_242_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[8]_Mux_244_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[7]_Mux_246_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[6]_Mux_248_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[5]_Mux_250_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[4]_Mux_252_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[3]_Mux_254_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[2]_Mux_256_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[1]_Mux_258_o> created at line 124.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[0]_Mux_260_o> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<31>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<30>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<29>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<28>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<27>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<26>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<25>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<24>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<23>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<22>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<21>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<20>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<19>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<18>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<17>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<16>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<15>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<14>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<13>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<12>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<11>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<10>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<9>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<8>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<7>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<6>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<5>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<4>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<3>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<2>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<1>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <aShft<0>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<31>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<30>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<29>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<28>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<27>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<26>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<25>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<24>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<23>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<22>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<21>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<20>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<19>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<18>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<17>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<16>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<15>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<14>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<13>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<12>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<11>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<10>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<9>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<8>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<7>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<6>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<5>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<4>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<3>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<2>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<1>> created at line 124.
    Found 1-bit 32-to-1 multiplexer for signal <bShft<0>> created at line 124.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <aStp<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <bStp<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
INFO:Xst:2774 - HDL ADVISOR - KEEP property attached to signal aStp_new may hinder XST clustering optimizations.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred 128 D-type flip-flop(s).
	inferred 128 Latch(s).
	inferred 194 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <encrypt> synthesized.

Synthesizing Unit <decrypt>.
    Related source file is "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\decrypt.vhd".
    Found 4-bit register for signal <pr_st>.
    Found 32-bit register for signal <aSig>.
    Found 32-bit register for signal <bSig>.
    Found 64-bit register for signal <dout>.
    Found finite state machine <FSM_3> for signal <pr_st>.
    -----------------------------------------------------------------------
    | States             | 16                                             |
    | Transitions        | 16                                             |
    | Inputs             | 0                                              |
    | Outputs            | 8                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | reset (negative)                               |
    | Reset type         | asynchronous                                   |
    | Reset State        | wt                                             |
    | Power Up State     | wt                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 32-bit subtractor for signal <bSub> created at line 60.
    Found 32-bit subtractor for signal <aSub> created at line 59.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[31]_Mux_4_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[30]_Mux_6_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[29]_Mux_8_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[28]_Mux_10_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[27]_Mux_12_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[26]_Mux_14_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[25]_Mux_16_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[24]_Mux_18_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[23]_Mux_20_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[22]_Mux_22_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[21]_Mux_24_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[20]_Mux_26_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[19]_Mux_28_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[18]_Mux_30_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[17]_Mux_32_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[16]_Mux_34_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[15]_Mux_36_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[14]_Mux_38_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[13]_Mux_40_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[12]_Mux_42_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[11]_Mux_44_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[10]_Mux_46_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[9]_Mux_48_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[8]_Mux_50_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[7]_Mux_52_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[6]_Mux_54_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[5]_Mux_56_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[4]_Mux_58_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[3]_Mux_60_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[2]_Mux_62_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[1]_Mux_64_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sEvn[0]_Mux_66_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[31]_Mux_68_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[30]_Mux_70_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[29]_Mux_72_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[28]_Mux_74_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[27]_Mux_76_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[26]_Mux_78_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[25]_Mux_80_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[24]_Mux_82_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[23]_Mux_84_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[22]_Mux_86_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[21]_Mux_88_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[20]_Mux_90_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[19]_Mux_92_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[18]_Mux_94_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[17]_Mux_96_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[16]_Mux_98_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[15]_Mux_100_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[14]_Mux_102_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[13]_Mux_104_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[12]_Mux_106_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[11]_Mux_108_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[10]_Mux_110_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[9]_Mux_112_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[8]_Mux_114_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[7]_Mux_116_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[6]_Mux_118_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[5]_Mux_120_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[4]_Mux_122_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[3]_Mux_124_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[2]_Mux_126_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[1]_Mux_128_o> created at line 123.
    Found 1-bit 13-to-1 multiplexer for signal <pr_st[3]_sOdd[0]_Mux_130_o> created at line 123.
    Found 32-bit 32-to-1 multiplexer for signal <bRs> created at line 275.
    Found 32-bit 32-to-1 multiplexer for signal <aRs> created at line 309.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sEvn<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<31>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<30>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<29>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<28>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<27>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<26>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<25>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<24>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<23>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<22>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<21>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<20>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<19>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<18>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<17>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<16>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<15>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<14>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<13>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<12>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<11>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<10>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<9>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<8>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<7>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<6>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<5>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<4>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<3>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<2>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<1>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
WARNING:Xst:737 - Found 1-bit latch for signal <sOdd<0>>. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
    Summary:
	inferred   2 Adder/Subtractor(s).
	inferred 128 D-type flip-flop(s).
	inferred  64 Latch(s).
	inferred  70 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <decrypt> synthesized.

Synthesizing Unit <Hex2LED>.
    Related source file is "C:\Users\mos28\Documents\xilinx proj\hardsec\lab7_trojaned\Hex2SevenSegConverter.vhd".
WARNING:Xst:647 - Input <CLK> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 16x8-bit Read Only RAM for signal <Y>
    Summary:
	inferred   1 RAM(s).
Unit <Hex2LED> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 9
 16x8-bit single-port Read Only RAM                    : 9
# Adders/Subtractors                                   : 14
 2-bit adder                                           : 2
 27-bit adder                                          : 1
 32-bit adder                                          : 7
 32-bit subtractor                                     : 2
 4-bit adder                                           : 1
 5-bit adder                                           : 1
# Registers                                            : 106
 1-bit register                                        : 64
 2-bit register                                        : 2
 27-bit register                                       : 1
 32-bit register                                       : 33
 4-bit register                                        : 1
 5-bit register                                        : 1
 64-bit register                                       : 4
# Latches                                              : 256
 1-bit latch                                           : 256
# Multiplexers                                         : 501
 1-bit 13-to-1 multiplexer                             : 128
 1-bit 2-to-1 multiplexer                              : 256
 1-bit 32-to-1 multiplexer                             : 64
 2-bit 2-to-1 multiplexer                              : 1
 32-bit 2-to-1 multiplexer                             : 37
 32-bit 26-to-1 multiplexer                            : 1
 32-bit 32-to-1 multiplexer                            : 3
 32-bit 4-to-1 multiplexer                             : 1
 8-bit 2-to-1 multiplexer                              : 10
# FSMs                                                 : 4
# Xors                                                 : 4
 32-bit xor2                                           : 4

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


Synthesizing (advanced) Unit <Hex2LED>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_Y> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <X>             |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <Y>             |          |
    -----------------------------------------------------------------------
Unit <Hex2LED> synthesized (advanced).

Synthesizing (advanced) Unit <rc5dup>.
The following registers are absorbed into counter <Cntr>: 1 register on signal <Cntr>.
The following registers are absorbed into counter <Valb>: 1 register on signal <Valb>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_SSEG_AN> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <Valb>          |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <SSEG_AN>       |          |
    -----------------------------------------------------------------------
Unit <rc5dup> synthesized (advanced).

Synthesizing (advanced) Unit <roundkey>.
The following registers are absorbed into counter <iCnt>: 1 register on signal <iCnt>.
The following registers are absorbed into counter <jCnt>: 1 register on signal <jCnt>.
The following registers are absorbed into accumulator <sReg>: 1 register on signal <sReg>.
Unit <roundkey> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 9
 16x8-bit single-port distributed Read Only RAM        : 9
# Adders/Subtractors                                   : 9
 2-bit adder                                           : 1
 32-bit adder                                          : 6
 32-bit subtractor                                     : 2
# Counters                                             : 4
 2-bit up counter                                      : 1
 27-bit up counter                                     : 1
 4-bit up counter                                      : 1
 5-bit up counter                                      : 1
# Accumulators                                         : 1
 32-bit up accumulator                                 : 1
# Registers                                            : 1346
 Flip-Flops                                            : 1346
# Multiplexers                                         : 562
 1-bit 13-to-1 multiplexer                             : 128
 1-bit 2-to-1 multiplexer                              : 256
 1-bit 26-to-1 multiplexer                             : 32
 1-bit 32-to-1 multiplexer                             : 64
 1-bit 4-to-1 multiplexer                              : 32
 32-bit 2-to-1 multiplexer                             : 37
 32-bit 32-to-1 multiplexer                            : 3
 8-bit 2-to-1 multiplexer                              : 10
# FSMs                                                 : 4
# Xors                                                 : 4
 32-bit xor2                                           : 4

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <FSM_0> on signal <pr_st[1:3]> with gray encoding.
-------------------
 State | Encoding
-------------------
 start | 000
 stky  | 001
 kygn  | 011
 load  | 010
 sten  | 111
 encr  | 101
 stde  | 110
 decr  | 100
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <key_gen_comp/FSM_1> on signal <prSt[1:4]> with gray encoding.
-------------------
 State | Encoding
-------------------
 strt  | 0000
 sinit | 0001
 wtky  | 0011
 l0ld  | 0010
 l1ld  | 0110
 l2ld  | 0111
 l3ld  | 0101
 kyexp | 0100
 kyrdy | 1100
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <encrypt_comp/FSM_2> on signal <pr_st[1:4]> with user encoding.
-------------------
 State | Encoding
-------------------
 wt    | 0000
 lo    | 0001
 s0    | 0010
 s1    | 0011
 s2    | 0100
 s3    | 0101
 s4    | 0110
 s5    | 0111
 s6    | 1000
 s7    | 1001
 s8    | 1010
 s9    | 1011
 s10   | 1100
 s11   | 1101
 s12   | 1110
 dn    | 1111
-------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <decrypt_comp/FSM_3> on signal <pr_st[1:4]> with user encoding.
-------------------
 State | Encoding
-------------------
 wt    | 0000
 lo    | 0001
 s0    | 0010
 s1    | 0011
 s2    | 0100
 s3    | 0101
 s4    | 0110
 s5    | 0111
 s6    | 1000
 s7    | 1001
 s8    | 1010
 s9    | 1011
 s10   | 1100
 s11   | 1101
 s12   | 1110
 dn    | 1111
-------------------

Optimizing unit <rc5dup> ...

Optimizing unit <roundkey> ...

Optimizing unit <encrypt> ...

Optimizing unit <decrypt> ...

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block rc5dup, actual ratio is 5.
FlipFlop key_gen_comp/jCnt_0 has been replicated 1 time(s)

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 1432
 Flip-Flops                                            : 1432

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : rc5dup.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 3205
#      GND                         : 1
#      INV                         : 28
#      LUT1                        : 38
#      LUT2                        : 233
#      LUT3                        : 379
#      LUT4                        : 91
#      LUT5                        : 551
#      LUT6                        : 1254
#      MUXCY                       : 274
#      MUXF7                       : 72
#      VCC                         : 1
#      XORCY                       : 283
# FlipFlops/Latches                : 1688
#      FD                          : 128
#      FDC                         : 11
#      FDCE                        : 66
#      FDE                         : 960
#      FDR                         : 31
#      FDRE                        : 219
#      FDSE                        : 17
#      LD                          : 192
#      LDC                         : 64
# Clock Buffers                    : 4
#      BUFG                        : 3
#      BUFGP                       : 1
# IO Buffers                       : 54
#      IBUF                        : 22
#      OBUF                        : 32

Device utilization summary:
---------------------------

Selected Device : 7a100tcsg324-3 


Slice Logic Utilization: 
 Number of Slice Registers:            1688  out of  126800     1%  
 Number of Slice LUTs:                 2574  out of  63400     4%  
    Number used as Logic:              2574  out of  63400     4%  

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:   2986
   Number with an unused Flip Flop:    1298  out of   2986    43%  
   Number with an unused LUT:           412  out of   2986    13%  
   Number of fully used LUT-FF pairs:  1276  out of   2986    42%  
   Number of unique control sets:        50

IO Utilization: 
 Number of IOs:                          55
 Number of bonded IOBs:                  55  out of    210    26%  

Specific Feature Utilization:
 Number of BUFG/BUFGCTRLs:                4  out of     32    12%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------------------------------------------------------------+-----------------------------+-------+
Clock Signal                                                                             | Clock buffer(FF name)       | Load  |
-----------------------------------------------------------------------------------------+-----------------------------+-------+
clk                                                                                      | BUFGP                       | 1430  |
PWR_6_o_PWR_6_o_OR_13_o(PWR_6_o_PWR_6_o_OR_13_o1:O)                                      | BUFG(*)(dout_61)            | 64    |
key_gen_comp/jCnt[4]_Decoder_121_OUT<25>(key_gen_comp/jCnt[4]_Decoder_121_OUT<25><4>1:O) | NONE(*)(key_gen_comp/kCnt_1)| 2     |
encrypt_comp/pr_st[3]_GND_10_o_Mux_7_o(encrypt_comp/pr_st_pr_st[3]_GND_10_o_Mux_7_o1:O)  | BUFG(*)(encrypt_comp/bStp_1)| 128   |
decrypt_comp/pr_st[3]_GND_139_o_Mux_5_o(decrypt_comp/pr_st_pr_st[3]_GND_139_o_Mux_5_o1:O)| BUFG(*)(decrypt_comp/sOdd_0)| 64    |
-----------------------------------------------------------------------------------------+-----------------------------+-------+
(*) These 4 clock signal(s) are generated by combinatorial logic,
and XST is not able to identify which are the primary clock signals.
Please use the CLOCK_SIGNAL constraint to specify the clock signal(s) generated by combinatorial logic.
INFO:Xst:2169 - HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -3

   Minimum period: 8.846ns (Maximum Frequency: 113.040MHz)
   Minimum input arrival time before clock: 1.509ns
   Maximum output required time after clock: 4.277ns
   Maximum combinational path delay: 4.048ns

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 8.846ns (frequency: 113.040MHz)
  Total number of paths / destination ports: 3469964119 / 2901
-------------------------------------------------------------------------
Delay:               8.846ns (Levels of Logic = 56)
  Source:            key_gen_comp/sArr_8_0 (FF)
  Destination:       key_gen_comp/b_26 (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: key_gen_comp/sArr_8_0 to key_gen_comp/b_26
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDE:C->Q              3   0.361   0.703  key_gen_comp/sArr_8_0 (key_gen_comp/sArr_8_0)
     LUT6:I0->O            1   0.097   0.556  key_gen_comp/mux_91 (key_gen_comp/mux_91)
     LUT6:I2->O            1   0.097   0.000  key_gen_comp/mux_4 (key_gen_comp/mux_4)
     MUXF7:I0->O           2   0.277   0.299  key_gen_comp/mux_2_f7 (key_gen_comp/n0608<0>)
     LUT3:I2->O            1   0.097   0.295  key_gen_comp/Madd_sAdd (key_gen_comp/Madd_sAdd)
     LUT4:I3->O            1   0.097   0.000  key_gen_comp/Madd_sAdd_lut<0>1 (key_gen_comp/Madd_sAdd_lut<0>1)
     MUXCY:S->O            1   0.353   0.000  key_gen_comp/Madd_sAdd_cy<0>_0 (key_gen_comp/Madd_sAdd_cy<0>1)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_1 (key_gen_comp/Madd_sAdd_cy<0>2)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_2 (key_gen_comp/Madd_sAdd_cy<0>3)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_3 (key_gen_comp/Madd_sAdd_cy<0>4)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_4 (key_gen_comp/Madd_sAdd_cy<0>5)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_5 (key_gen_comp/Madd_sAdd_cy<0>6)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_6 (key_gen_comp/Madd_sAdd_cy<0>7)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_7 (key_gen_comp/Madd_sAdd_cy<0>8)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_8 (key_gen_comp/Madd_sAdd_cy<0>9)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_9 (key_gen_comp/Madd_sAdd_cy<0>10)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_10 (key_gen_comp/Madd_sAdd_cy<0>11)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_11 (key_gen_comp/Madd_sAdd_cy<0>12)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_12 (key_gen_comp/Madd_sAdd_cy<0>13)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_13 (key_gen_comp/Madd_sAdd_cy<0>14)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_14 (key_gen_comp/Madd_sAdd_cy<0>15)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_15 (key_gen_comp/Madd_sAdd_cy<0>16)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_16 (key_gen_comp/Madd_sAdd_cy<0>17)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_17 (key_gen_comp/Madd_sAdd_cy<0>18)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_18 (key_gen_comp/Madd_sAdd_cy<0>19)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_19 (key_gen_comp/Madd_sAdd_cy<0>20)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_20 (key_gen_comp/Madd_sAdd_cy<0>21)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_21 (key_gen_comp/Madd_sAdd_cy<0>22)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_22 (key_gen_comp/Madd_sAdd_cy<0>23)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_23 (key_gen_comp/Madd_sAdd_cy<0>24)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_24 (key_gen_comp/Madd_sAdd_cy<0>25)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_25 (key_gen_comp/Madd_sAdd_cy<0>26)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_26 (key_gen_comp/Madd_sAdd_cy<0>27)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_27 (key_gen_comp/Madd_sAdd_cy<0>28)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_28 (key_gen_comp/Madd_sAdd_cy<0>29)
     MUXCY:CI->O           0   0.023   0.000  key_gen_comp/Madd_sAdd_cy<0>_29 (key_gen_comp/Madd_sAdd_cy<0>30)
     XORCY:CI->O           3   0.370   0.305  key_gen_comp/Madd_sAdd_xor<0>_30 (key_gen_comp/sAdd<31>)
     LUT2:I1->O            1   0.097   0.000  key_gen_comp/Madd_bAShAdd_lut<2> (key_gen_comp/Madd_bAShAdd_lut<2>)
     MUXCY:S->O            1   0.353   0.000  key_gen_comp/Madd_bAShAdd_cy<2> (key_gen_comp/Madd_bAShAdd_cy<2>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_bAShAdd_cy<3> (key_gen_comp/Madd_bAShAdd_cy<3>)
     XORCY:CI->O         161   0.370   0.422  key_gen_comp/Madd_bAShAdd_xor<4> (key_gen_comp/bAShAdd<4>)
     LUT2:I1->O            1   0.097   0.000  key_gen_comp/Madd_lAdd_lut<4> (key_gen_comp/Madd_lAdd_lut<4>)
     MUXCY:S->O            1   0.353   0.000  key_gen_comp/Madd_lAdd_cy<4> (key_gen_comp/Madd_lAdd_cy<4>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<5> (key_gen_comp/Madd_lAdd_cy<5>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<6> (key_gen_comp/Madd_lAdd_cy<6>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<7> (key_gen_comp/Madd_lAdd_cy<7>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<8> (key_gen_comp/Madd_lAdd_cy<8>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<9> (key_gen_comp/Madd_lAdd_cy<9>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<10> (key_gen_comp/Madd_lAdd_cy<10>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<11> (key_gen_comp/Madd_lAdd_cy<11>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<12> (key_gen_comp/Madd_lAdd_cy<12>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<13> (key_gen_comp/Madd_lAdd_cy<13>)
     MUXCY:CI->O           1   0.023   0.000  key_gen_comp/Madd_lAdd_cy<14> (key_gen_comp/Madd_lAdd_cy<14>)
     XORCY:CI->O           4   0.370   0.570  key_gen_comp/Madd_lAdd_xor<15> (key_gen_comp/lAdd<15>)
     LUT6:I2->O            6   0.097   0.534  key_gen_comp/bAShAdd<1>231 (key_gen_comp/bAShAdd<1>_mmx_out3)
     LUT6:I3->O           10   0.097   0.553  key_gen_comp/bAShAdd<3>91 (key_gen_comp/bAShAdd<3>_mmx_out17)
     LUT5:I2->O            1   0.097   0.000  key_gen_comp/Mmux_lShf210 (key_gen_comp/lShf<10>)
     FDRE:D                    0.008          key_gen_comp/b_10
    ----------------------------------------
    Total                      8.846ns (4.608ns logic, 4.238ns route)
                                       (52.1% logic, 47.9% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'key_gen_comp/jCnt[4]_Decoder_121_OUT<25>'
  Clock period: 1.050ns (frequency: 952.018MHz)
  Total number of paths / destination ports: 3 / 2
-------------------------------------------------------------------------
Delay:               1.050ns (Levels of Logic = 1)
  Source:            key_gen_comp/kCnt_0 (FF)
  Destination:       key_gen_comp/kCnt_0 (FF)
  Source Clock:      key_gen_comp/jCnt[4]_Decoder_121_OUT<25> rising
  Destination Clock: key_gen_comp/jCnt[4]_Decoder_121_OUT<25> rising

  Data Path: key_gen_comp/kCnt_0 to key_gen_comp/kCnt_0
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDCE:C->Q             3   0.361   0.289  key_gen_comp/kCnt_0 (key_gen_comp/kCnt_0)
     INV:I->O              1   0.113   0.279  key_gen_comp/Mmux_kCnt[1]_GND_7_o_mux_30_OUT11_INV_0 (key_gen_comp/kCnt[1]_GND_7_o_mux_30_OUT<0>)
     FDCE:D                    0.008          key_gen_comp/kCnt_0
    ----------------------------------------
    Total                      1.050ns (0.482ns logic, 0.568ns route)
                                       (45.9% logic, 54.1% route)

=========================================================================
Timing constraint: Default period analysis for Clock 'encrypt_comp/pr_st[3]_GND_10_o_Mux_7_o'
  Clock period: 5.472ns (frequency: 182.742MHz)
  Total number of paths / destination ports: 53408 / 32
-------------------------------------------------------------------------
Delay:               5.472ns (Levels of Logic = 9)
  Source:            encrypt_comp/aStp_28 (LATCH)
  Destination:       encrypt_comp/bStp_25 (LATCH)
  Source Clock:      encrypt_comp/pr_st[3]_GND_10_o_Mux_7_o falling
  Destination Clock: encrypt_comp/pr_st[3]_GND_10_o_Mux_7_o falling

  Data Path: encrypt_comp/aStp_28 to encrypt_comp/bStp_25
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     LD:G->Q               2   0.472   0.688  encrypt_comp/aStp_28 (encrypt_comp/aStp_28)
     LUT6:I1->O            1   0.107   0.379  encrypt_comp/Dev_aStp30 (encrypt_comp/aStp_new)
     LUT2:I0->O            1   0.097   0.000  encrypt_comp/Madd_aAdd_lut<30> (encrypt_comp/Madd_aAdd_lut<30>)
     MUXCY:S->O            0   0.353   0.000  encrypt_comp/Madd_aAdd_cy<30> (encrypt_comp/Madd_aAdd_cy<30>)
     XORCY:CI->O           2   0.370   0.516  encrypt_comp/Madd_aAdd_xor<31> (encrypt_comp/aAdd<31>)
     LUT4:I1->O            4   0.097   0.570  encrypt_comp/Mxor_bXor_31_xo<0>1 (encrypt_comp/bXor<31>)
     LUT6:I2->O            4   0.097   0.570  encrypt_comp/Mmux_bShft<1>_82 (encrypt_comp/Mmux_bShft<13>_10)
     LUT6:I2->O            2   0.097   0.000  encrypt_comp/Mmux_bShft<9>_4 (encrypt_comp/Mmux_bShft<25>_3)
     MUXF7:I1->O           1   0.279   0.683  encrypt_comp/Mmux_bShft<25>_2_f7 (encrypt_comp/bShft<25>)
     LUT5:I0->O            1   0.097   0.000  encrypt_comp/Mmux_pr_st[3]_bStp[25]_Mux_82_o11 (encrypt_comp/pr_st[3]_bStp[25]_Mux_82_o)
     LD:D                     -0.028          encrypt_comp/bStp_25
    ----------------------------------------
    Total                      5.472ns (2.066ns logic, 3.406ns route)
                                       (37.8% logic, 62.2% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 492 / 360
-------------------------------------------------------------------------
Offset:              1.509ns (Levels of Logic = 3)
  Source:            inpaL (PAD)
  Destination:       key_gen_comp/lArr_0_31 (FF)
  Destination Clock: clk rising

  Data Path: inpaL to key_gen_comp/lArr_0_31
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            65   0.001   0.623  inpaL_IBUF (inpaL_IBUF)
     LUT3:I0->O            1   0.097   0.683  key_gen_comp/Mmux_lShf101_SW0 (N6)
     LUT5:I0->O            1   0.097   0.000  key_gen_comp/Mmux_lArr[3][31]_lArr[3][31]_mux_65_OUT101 (key_gen_comp/lArr[3][31]_lArr[3][31]_mux_65_OUT<18>)
     FDRE:D                    0.008          key_gen_comp/lArr_3_18
    ----------------------------------------
    Total                      1.509ns (0.203ns logic, 1.306ns route)
                                       (13.4% logic, 86.6% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'PWR_6_o_PWR_6_o_OR_13_o'
  Total number of paths / destination ports: 64 / 64
-------------------------------------------------------------------------
Offset:              1.158ns (Levels of Logic = 2)
  Source:            reset (PAD)
  Destination:       dout_61 (LATCH)
  Destination Clock: PWR_6_o_PWR_6_o_OR_13_o falling

  Data Path: reset to dout_61
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O             4   0.001   0.293  reset_IBUF (reset_IBUF)
     INV:I->O            131   0.113   0.401  reset_inv1321_INV_0 (reset_inv)
     LDC:CLR                   0.349          dout_28
    ----------------------------------------
    Total                      1.158ns (0.463ns logic, 0.695ns route)
                                       (40.0% logic, 60.0% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 382 / 31
-------------------------------------------------------------------------
Offset:              3.952ns (Levels of Logic = 6)
  Source:            Valb_0 (FF)
  Destination:       SSEG_CA<0> (PAD)
  Source Clock:      clk rising

  Data Path: Valb_0 to SSEG_CA<0>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDRE:C->Q            22   0.361   0.607  Valb_0 (Valb_0)
     LUT3:I0->O            9   0.097   0.332  Mmux_SSEG_CA171 (Mmux_SSEG_CA17)
     LUT5:I4->O            1   0.097   0.693  Mmux_SSEG_CA26 (Mmux_SSEG_CA25)
     LUT6:I0->O            1   0.097   0.511  Mmux_SSEG_CA27 (Mmux_SSEG_CA26)
     LUT6:I3->O            1   0.097   0.683  Mmux_SSEG_CA28 (Mmux_SSEG_CA27)
     LUT6:I1->O            1   0.097   0.279  Mmux_SSEG_CA29 (SSEG_CA_0_OBUF)
     OBUF:I->O                 0.000          SSEG_CA_0_OBUF (SSEG_CA<0>)
    ----------------------------------------
    Total                      3.952ns (0.846ns logic, 3.106ns route)
                                       (21.4% logic, 78.6% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'PWR_6_o_PWR_6_o_OR_13_o'
  Total number of paths / destination ports: 772 / 7
-------------------------------------------------------------------------
Offset:              4.277ns (Levels of Logic = 6)
  Source:            dout_50 (LATCH)
  Destination:       SSEG_CA<2> (PAD)
  Source Clock:      PWR_6_o_PWR_6_o_OR_13_o falling

  Data Path: dout_50 to SSEG_CA<2>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     LDC:G->Q              1   0.472   0.379  dout_50 (dout_50)
     LUT3:I1->O           10   0.097   0.735  Mmux_hexval101 (hexval<18>)
     LUT6:I0->O            2   0.097   0.687  CONV4/Mram_Y221 (CONV4/Mram_Y22)
     LUT6:I1->O            1   0.097   0.556  Mmux_SSEG_CA65 (Mmux_SSEG_CA64)
     LUT6:I2->O            1   0.097   0.683  Mmux_SSEG_CA69 (Mmux_SSEG_CA68)
     LUT5:I0->O            1   0.097   0.279  Mmux_SSEG_CA610 (SSEG_CA_2_OBUF)
     OBUF:I->O                 0.000          SSEG_CA_2_OBUF (SSEG_CA<2>)
    ----------------------------------------
    Total                      4.277ns (0.957ns logic, 3.320ns route)
                                       (22.4% logic, 77.6% route)

=========================================================================
Timing constraint: Default path analysis
  Total number of paths / destination ports: 375 / 7
-------------------------------------------------------------------------
Delay:               4.048ns (Levels of Logic = 7)
  Source:            sw<15> (PAD)
  Destination:       SSEG_CA<2> (PAD)

  Data Path: sw<15> to SSEG_CA<2>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            54   0.001   0.621  sw_15_IBUF (sw_15_IBUF)
     LUT3:I0->O           10   0.097   0.735  Mmux_hexval101 (hexval<18>)
     LUT6:I0->O            2   0.097   0.687  CONV4/Mram_Y221 (CONV4/Mram_Y22)
     LUT6:I1->O            1   0.097   0.556  Mmux_SSEG_CA65 (Mmux_SSEG_CA64)
     LUT6:I2->O            1   0.097   0.683  Mmux_SSEG_CA69 (Mmux_SSEG_CA68)
     LUT5:I0->O            1   0.097   0.279  Mmux_SSEG_CA610 (SSEG_CA_2_OBUF)
     OBUF:I->O                 0.000          SSEG_CA_2_OBUF (SSEG_CA<2>)
    ----------------------------------------
    Total                      4.048ns (0.486ns logic, 3.562ns route)
                                       (12.0% logic, 88.0% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock PWR_6_o_PWR_6_o_OR_13_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.141|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock clk
----------------------------------------+---------+---------+---------+---------+
                                        | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock                            |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
----------------------------------------+---------+---------+---------+---------+
clk                                     |    8.846|         |         |         |
decrypt_comp/pr_st[3]_GND_139_o_Mux_5_o |         |    6.837|         |         |
encrypt_comp/pr_st[3]_GND_10_o_Mux_7_o  |         |    3.268|         |         |
key_gen_comp/jCnt[4]_Decoder_121_OUT<25>|    1.159|         |         |         |
----------------------------------------+---------+---------+---------+---------+

Clock to Setup on destination clock decrypt_comp/pr_st[3]_GND_139_o_Mux_5_o
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |         |         |    1.947|         |
---------------+---------+---------+---------+---------+

Clock to Setup on destination clock encrypt_comp/pr_st[3]_GND_10_o_Mux_7_o
--------------------------------------+---------+---------+---------+---------+
                                      | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock                          |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
--------------------------------------+---------+---------+---------+---------+
clk                                   |         |         |    4.310|         |
encrypt_comp/pr_st[3]_GND_10_o_Mux_7_o|         |         |    5.472|         |
--------------------------------------+---------+---------+---------+---------+

Clock to Setup on destination clock key_gen_comp/jCnt[4]_Decoder_121_OUT<25>
----------------------------------------+---------+---------+---------+---------+
                                        | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock                            |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
----------------------------------------+---------+---------+---------+---------+
clk                                     |    1.711|         |         |         |
key_gen_comp/jCnt[4]_Decoder_121_OUT<25>|    1.050|         |         |         |
----------------------------------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 25.00 secs
Total CPU time to Xst completion: 24.47 secs
 
--> 

Total memory usage is 452120 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :  314 (   0 filtered)
Number of infos    :    5 (   0 filtered)

